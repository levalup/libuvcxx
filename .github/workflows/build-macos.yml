name: Build MacOS

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop

jobs:
  build-macos:
    if: >-
      ! contains(toJSON(github.event.commits.*.message), '[skip ci]') &&
      ! contains(toJSON(github.event.commits.*.message), '[skip github]')

    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ 'macos-14.5' ]
        xcode: [ '15.4' ]
        build_type: [ Release ]

    env:
      DEVELOPER_DIR: /Applications/Xcode_${{matrix.xcode}}.app/Contents/Developer

    name: "On ${{matrix.os}} Xcode ${{matrix.xcode}} ${{matrix.build_type}}"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: friendlyanon/fetch-core-count@v1
        id: cores

      - name: Set output
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure
        run: >-
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: >-
          cmake --build ${{ steps.strings.outputs.build-output-dir }}
          --config ${{ matrix.build_type }}
          -- -j ${{steps.cores.outputs.count}}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --output-on-failure --build-config ${{ matrix.build_type }}
