name: Build Multi-GCC

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop

jobs:
  build-gcc:
    if: >-
      ! contains(toJSON(github.event.commits.*.message), '[skip ci]') &&
      ! contains(toJSON(github.event.commits.*.message), '[skip github]')

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        gcc_version: ['latest', '12', '11', '10', '9', '8', '7', '6', '5', '4.8.5']
        build_type: [Release]

    name: "In Container GCC ${{matrix.gcc_version}} ${{matrix.build_type}}"

    container:
      image: gcc:${{matrix.gcc_version}}
      options: >-
        -v /usr/local:/host_usr_local
        -v "${{ github.workspace }}":/workspace
        --workdir /workspace

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - uses: friendlyanon/fetch-core-count@v1
        id: cores
        if: matrix.gcc_version != '4.8.5'

      - name: Set output
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: CMake
        run: echo "/host_usr_local/bin" >> $GITHUB_PATH

      - name: Configure
        run: >-
          cmake -B /workspace/build
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S /workspace

      - name: Build
        run: >-
          cmake --build /workspace/build
          --config ${{ matrix.build_type }}
          -- -j ${{steps.cores.outputs.count}}

      - name: Test
        working-directory: /workspace/build
        run: ctest --output-on-failure --build-config ${{ matrix.build_type }}
