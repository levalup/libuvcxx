name: Build GCC-std

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop

jobs:
  build-gcc-std:
    if: >-
      ! contains(toJSON(github.event.commits.*.message), '[skip ci]') &&
      ! contains(toJSON(github.event.commits.*.message), '[skip github]')

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-latest ]
        build_type: [ Release ]
        std: [ '17', '14', '11' ]

    name: "On ${{matrix.os}} gcc -std=c++${{matrix.std}}"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: friendlyanon/fetch-core-count@v1
        id: cores

      - name: Set output
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure
        run: >
          cmake -B "${{ steps.strings.outputs.build-output-dir }}"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S "${{ github.workspace }}"

      - name: Build
        run: >-
          cmake --build "${{ steps.strings.outputs.build-output-dir }}"
          -DSTD=${{ matrix.std }}
          --config ${{ matrix.build_type }}

      - name: Test
        working-directory: "${{ steps.strings.outputs.build-output-dir }}"
        run: ctest --output-on-failure --build-config ${{ matrix.build_type }}
